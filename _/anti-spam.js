import Module from '../module.js'

class AntiSpamModule extends Module {
    description = "–ê–Ω—Ç–∏—Å–ø–∞–º –Ω–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç > 3"
    priority = 1
    
    async onEverything(ctx, next) {
        const NOW = Date.now();
        const ID = ctx.from.id;
        
        if (spamblock[ID] > NOW) return;
        
        if (latestmsg[ID] > NOW - 500) {
            spamblock[ID] = NOW + 2000
            if(ctx.chat.id > 0 && ctx.message?.text) 
                await ctx.reply(`üí´ <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–∏—à–∏—Ç–µ —Ä–µ–∂–µ ‚ù§Ô∏è</b>`
                              + `\n–¢–∞–∫ –≤—ã —Å–Ω–∏–∂–∞–µ—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ –±–æ—Ç–∞`, { parse_mode: 'HTML' });
            return;
        }
        
        latestmsg[ID] = NOW
        
        // –í—ã–Ω–µ—Å—Ç–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º 1
        if (ctx.message && ctx.message.date < (NOW / 1000 - 5)) {
            if(!aliveresp[ID]) {
                aliveresp[ID] = true;
                spamblock[ID] = NOW + 2000;
                if(ctx.chat.id > 0) await ctx.reply(`üí´ <b>–ë–æ—Ç —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω!</b>`);
            }
            return;
        }
        
        next();
    }
}

// WARNING –∑–∞—Å–æ—Ä—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ?
const spamblock = {}
const latestmsg = {}
const aliveresp = {}

export default AntiSpamModule
